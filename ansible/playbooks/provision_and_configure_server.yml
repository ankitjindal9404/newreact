---
- name: Provision Ec2 instance and install xx
  hosts: localhost
  gather_facts: no

  tasks:
    - name: Adding SSH access to security group
      amazon.aws.ec2_group:
        name: default
        description: Security group for Ec2 instance
        region: us-east-1
        rules:
          - proto: tcp
            from_port: 5173
            to_port: 5173
            cidr_ip: 0.0.0.0/0
          - proto: tcp
            from_port: 22
            to_port: 22
            cidr_ip: 0.0.0.0/0
        rules_egress:
          - proto: all
            cidr_ip: 0.0.0.0/0
      register: security_group
    
    - name: Launch Ec2 instance
      amazon.aws.ec2_instance:
        name: Ansible-created-instance
        key_name: ansible-master-key
        region: us-east-1
        instance_type: t2.micro
        image_id: ami-0de716d6197524dd9
        count: 1
        security_group: "{{ security_group.group_id }}"
      register: ec2

    - name: Wait for instance to be ready
      wait_for:
        host: "{{ ec2.instance[0].public_dns_name }}"
        port: 22
        delay: 30
        timeout: 300
        state: started
      when: ec2.instance is defined and ec2.instances | length > 0
    - name: Add Ec2 instance to inventory dynamically
      add_host:
        name: "{{ec2.instances[0].public_dns_name}}"
        groups: magic_hosts
        ansible_ssh_private_key_file: "{{ ec2_ssh_key_file }}"
        ansible_user: ec2-user

    - name: Debug SSH key path
      debug:
        var: ec2_ssh_key_file
    
    - name: Debug dynamic inventory
      debug:
        var: groups['magic_hosts']

    - name: Install common packages
      become: yes
      package:
        name: httpd
        state: present
      delegate_to: "{{ item }}"
      with_items:
        - "{{ groups['magic_hosts'] }}"
      vars:
        ansible_ssh_private_key_file: "{{ ec2_ssh_key_file }}"
        ansible_user: ec2-user
      when: groups["magic_hosts"] is defined and groups["magic_hosts"] | length >0

  
    - name: Start and enable ensible
      become: yes
      service:
        name: httpd
        state: started
        enabled: yes
      delegate_to: "{{ item }}"
      with_items:
        - "{{ groups['magic_hosts'] }}"
      vars:
        ansible_ssh_private_key_file: "{{ ec2_ssh_key_file }}"
        ansible_user: ec2-user
      when: groups["magic_hosts"] is defined and groups["magic_hosts"] | length >0